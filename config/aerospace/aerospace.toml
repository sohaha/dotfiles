# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []
after-startup-command = []
start-at-login = true
exec-on-workspace-change = [
    '/bin/bash',
    '$HOME/dotfiles/config/aerospace/change.sh',
]


# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'
accordion-padding = 20
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

automatically-unhide-macos-hidden-apps = true

[workspace-to-monitor-force-assignment]
1 = 'main'
2 = ['main']
3 = ['main']

[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = [{ monitor.main = 0 }, 0]
inner.vertical = [{ monitor.main = 0 }, 0]
outer.left = [{ monitor.main = 0 }, 0]
outer.bottom = [{ monitor.main = 0 }, 0]
outer.top = [{ monitor.main = 0 }, 0]
outer.right = [{ monitor.main = 0 }, 0]


[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
b = 'balance-sizes'
esc = ['reload-config', 'mode main']

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# cmd-alt-ctrl-shift-space = 'fullscreen'

cmd-alt-ctrl-shift-s = 'workspace --wrap-around next'
cmd-alt-ctrl-shift-left = 'exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace --wrap-around prev'
cmd-alt-ctrl-shift-right = 'exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace --wrap-around next'
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
cmd-alt-ctrl-shift-q = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
cmd-alt-ctrl-shift-e = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left --boundaries-action wrap-around-the-workspace'
alt-j = 'focus down --boundaries-action wrap-around-the-workspace'
alt-k = 'focus up --boundaries-action wrap-around-the-workspace'
alt-l = 'focus right --boundaries-action wrap-around-the-workspace'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1 --auto-back-and-forth'
alt-2 = 'workspace 2 --auto-back-and-forth'
alt-3 = 'workspace 3 --auto-back-and-forth'
alt-4 = 'workspace 4 --auto-back-and-forth'
alt-5 = 'workspace 5 --auto-back-and-forth'
alt-6 = 'workspace 6 --auto-back-and-forth'
alt-7 = 'workspace 7 --auto-back-and-forth'
alt-8 = 'workspace 8 --auto-back-and-forth'
alt-9 = 'workspace 9 --auto-back-and-forth'
alt-0 = 'workspace 10 --auto-back-and-forth'
alt-p = 'workspace p --auto-back-and-forth'
# alt-o = 'workspace o --auto-back-and-forth'
alt-i = 'workspace idea --auto-back-and-forth'
# alt-u = 'workspace u --auto-back-and-forth'
# alt-y = 'workspace y --auto-back-and-forth'
# alt-t = 'workspace t --auto-back-and-forth'
alt-t = 'exec-and-forget open -a /Applications/Ghostty.app'
# alt-r = 'workspace r --auto-back-and-forth'

cmd-alt-ctrl-shift-1 = 'workspace browser --auto-back-and-forth'
cmd-alt-ctrl-shift-2 = 'workspace terminal --auto-back-and-forth'
cmd-alt-ctrl-shift-3 = 'workspace note --auto-back-and-forth'


# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
alt-shift-7 = ['move-node-to-workspace 7', 'workspace 7']
alt-shift-8 = ['move-node-to-workspace 8', 'workspace 8']
alt-shift-9 = ['move-node-to-workspace 9', 'workspace 9']
alt-shift-0 = ['move-node-to-workspace 10', 'workspace 10']
alt-shift-p = ['move-node-to-workspace p', 'workspace p']
# alt-shift-o = ['move-node-to-workspace o', 'workspace o']
alt-shift-i = ['move-node-to-workspace i', 'workspace idea']
alt-shift-u = ['move-node-to-workspace u', 'workspace u']
alt-shift-y = ['move-node-to-workspace y', 'workspace y']
alt-shift-t = ['move-node-to-workspace t', 'workspace t']
alt-shift-r = ['move-node-to-workspace r', 'workspace r']


alt-tab = 'workspace-back-and-forth'
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-comma = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
space = ['flatten-workspace-tree', 'mode main']
r = ['mode resize']
f = ['layout floating tiling', 'mode main']
# s = ['layout sticky tiling', 'mode main']
backspace = ['close-all-windows-but-current', 'mode main']


alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = 'move-node-to-workspace browser'

[[on-window-detected]]
if.app-id = 'org.mozilla.com.zen.browser'
run = 'move-node-to-workspace browser'

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = ['move-node-to-workspace terminal']

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = ['move-node-to-workspace terminal']

[[on-window-detected]]
if.app-id = 'com.anytype.anytype'
run = ['move-node-to-workspace note']

[[on-window-detected]]
if.app-id = 'com.exafunction.windsurf'
run = ['move-node-to-workspace 1']

[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92'
run = ['move-node-to-workspace 1']

[[on-window-detected]]
if.app-id = 'com.tencent.xWeChat'
# run = 'layout floating'
# if.window-title-regex-substring = '^(?!WeChat \(Chats\)|微信 \(聊天\)).*$'
# run = 'layout floating'
run = 'move-node-to-workspace chat'

[[on-window-detected]]
if.app-id = 'com.tencent.xinWeChat'
run = 'move-node-to-workspace chat'

[[on-window-detected]]
if.window-title-regex-substring = '(setting|设置)'
run = 'layout floating'

# [[on-window-detected]]
# if.window-title-regex-substring = '(Picture-in-Picture|画中画)'
# run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.youqu.todesk.mac'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.ruikq.decar'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.iphonesimulator'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'party.mihomo.app'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.seastar.turrit'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'cn.xterminal.www'
run = ['move-node-to-workspace xterminal']

[[on-window-detected]]
if.app-id = 'com.jetbrains.goland'
run = ['move-node-to-workspace idea']
